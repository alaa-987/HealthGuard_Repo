{
	"info": {
		"_postman_id": "7cdd061f-e535-4180-a1a4-86c9cfe1e1e9",
		"name": "Health Guard",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29867873"
	},
	"item": [
		{
			"name": "Categories",
			"item": [
				{
					"name": "Get All Categories",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/api/Products/categories",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"api",
								"Products",
								"categories"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Products",
			"item": [
				{
					"name": "Get All Product",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/api/Products",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"api",
								"Products"
							],
							"query": [
								{
									"key": "Sort",
									"value": "Name",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Product By Id",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/api/Products/3",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"api",
								"Products",
								"3"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Error Handling",
			"item": [
				{
					"name": "Not Found",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/api/Buggy/notfound",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"api",
								"Buggy",
								"notfound"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bad Request",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/api/Buggy/badrequest",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"api",
								"Buggy",
								"badrequest"
							]
						}
					},
					"response": []
				},
				{
					"name": "Server Error",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/api/Buggy/servererror",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"api",
								"Buggy",
								"servererror"
							]
						}
					},
					"response": []
				},
				{
					"name": "Validation Error",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/api/Buggy/badrequest/five",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"api",
								"Buggy",
								"badrequest",
								"five"
							]
						}
					},
					"response": []
				},
				{
					"name": "Un Authorized",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/api/Buggy/unauthorized",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"api",
								"Buggy",
								"unauthorized"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Basket",
			"item": [
				{
					"name": "Get Basket",
					"request": {
						"method": "GET",
						"header": []
					},
					"response": []
				},
				{
					"name": "Update Basket",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": \"basket01\",\r\n  \"items\": [\r\n    {\r\n      \"id\": 20,\r\n      \"productName\": \"Bionime Gm100 Blood Glucose Meter\",\r\n      \"picUrl\": \"https://localhost:7249/Img/Bionime Gm100 Blood Glucose Meter.jpg\",\r\n      \"price\": 300,\r\n      \"category\": \"Devices\",\r\n      \"quanntity\": 3\r\n    }\r\n  ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/api/Basket",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"api",
								"Basket"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Basket",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{BaseUrl}}/api/Basket",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"api",
								"Basket"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Token",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"displayName\": \"string\",\r\n  \"email\": \"user@example.com\",\r\n  \"phoneNumber\": \"string\",\r\n  \"password\": \"6pd9X701R(V,mi]=\",\r\n  \"location\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/api/Account/register",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"api",
								"Account",
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Token",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"email\": \"user@example.com\",\r\n  \"password\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/api/Account/login",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"api",
								"Account",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetCurrentUser",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"displayName\": \"string\",\r\n  \"email\": \"string\",\r\n  \"token\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/api/Account",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"api",
								"Account"
							]
						}
					},
					"response": []
				},
				{
					"name": "GetUserAddress",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Token",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fName\": \"string\",\r\n  \"lName\": \"string\",\r\n  \"street\": \"string\",\r\n  \"city\": \"string\",\r\n  \"country\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/api/Account/address",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"api",
								"Account",
								"address"
							]
						}
					},
					"response": []
				},
				{
					"name": "UpdateUserAddress",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Token",
								"value": "",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"fName\": \"string\",\r\n  \"lName\": \"string\",\r\n  \"street\": \"string\",\r\n  \"city\": \"string\",\r\n  \"country\": \"string\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BaseUrl}}/api/Account/address",
							"host": [
								"{{BaseUrl}}"
							],
							"path": [
								"api",
								"Account",
								"address"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "BaseUrl",
			"value": "https://localhost:7249",
			"type": "string"
		}
	]
}